name: GPT Worker CD Workflow

on:
  push:
    branches: [ "main" ]
  #pull_request:
    #branches: [ "dev_production" ]

jobs:
  build_and_push:
    name: Build and Push Docker Image (GPT Worker)
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build_and_push.outputs.image_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 730335258114.dkr.ecr.ap-northeast-2.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        id: build_and_push
        run: |
          # 태그를 latest로 고정 (필요에 따라 고유 태그 생성도 가능)
          IMAGE_TAG=latest
          echo "Building multi-arch Docker image with tag ${IMAGE_TAG}"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t 730335258114.dkr.ecr.ap-northeast-2.amazonaws.com/aira/gpt_worker:${IMAGE_TAG} \
            --push .
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

  update_gitops:
    name: Update GitOps Repository with GPT Worker Manifest
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout GitOps Repository
        uses: actions/checkout@v4
        with:
          repository: ktb-goorm-jaksim3/Aira_V3_GitOps
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops
          fetch-depth: 0

      - name: Update GPT Worker Deployment Manifest (Dummy)
        run: |
          IMAGE_TAG=${{ needs.build_and_push.outputs.image_tag }}
          echo "Updating GitOps manifest with image tag ${IMAGE_TAG}"
          cd gitops
          MANIFEST_FILE="gpt-worker-deployment.yaml"
          
          # dummy manifest 생성 (namespace: application, Deployment: gpt-worker)
          if [ ! -f "$MANIFEST_FILE" ]; then
            echo "Creating dummy deployment manifest"
            cat <<EOF > $MANIFEST_FILE
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: gpt-worker
            namespace: application
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: gpt-worker
            template:
              metadata:
                labels:
                  app: gpt-worker
              spec:
                containers:
                - name: gpt-worker
                  image: 730335258114.dkr.ecr.ap-northeast-2.amazonaws.com/aira/gpt_worker:${IMAGE_TAG}
                  ports:
                  - containerPort: 8080
          EOF
          else
            sed -i "s|image: .*\/aira/gpt_worker:.*|image: 730335258114.dkr.ecr.ap-northeast-2.amazonaws.com/aira/gpt_worker:${IMAGE_TAG}|g" $MANIFEST_FILE
          fi

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add $MANIFEST_FILE
          git commit -m "Update GPT Worker deployment manifest with image tag ${IMAGE_TAG}" || echo "No changes to commit."

      - name: Push changes to GitOps Repository
        working-directory: gitops
        run: |
          git push origin HEAD:main
